CDN（Content Delivery Network）とは、Bootstrapのような公開ライブラリを誰でも自由に使えるよう、
Web上に設置（ホスティング）してくれているサイトです。

<!DOCTYPE html>
<html lang="ja">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">

        <title>Hello, world!</title>
    </head>
    <body>
        <h1>Hello, world!</h1>

        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS, then Font Awesome -->
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
        <script defer src="https://use.fontawesome.com/releases/v5.7.2/js/all.js"></script>
    </body>
</html>

これがbootstrap使用時のテンプレート
metaに注目
content="width=device-width"で横幅をデバイスの横幅に一致させる。
initial-scale=1でデフォルトのサイズ倍率を一倍にしている。
shrink-to-fit=noでiOSのSafariで表示倍率を自動的に縮小する処理を無効にする( shrink-to-fit=no )
こうすればiphoneでも文字が縮小されて醜くなるということがなくなる。

レスポンシブデザインとは多様な画面サイズに対応すること、google検索で上位にでやすくなる。
つまりはメディアクエリをしっかりと設定することが大事になる。
メディアクエリ自体はCSSの優先順位に影響を与えず、単に より下方で定義された値が優先される というCSSのルールを利用しているに過ぎません。
そのため、上の方により広い条件（min-width:500px ＝表示幅500px以上）を書き、下に行くに従って対象範囲が狭まる（min-width:1000px ＝表示幅1000px以上）ように書きます。

min-widthとmax-widthが存在する。

次にグリッドシステムを理解する。画面が12分割されている。
使うルールはグリッドシステムを使う範囲にcontainerクラスをつける
containerの中にrowクラスをつける(ブロックレベル要素、一列を規定する)
その中にcol-[画面サイズ]-[カラム数]
[      col-md-6        ][        col-md-6      ]
[     col-md-5       ]    [offset-md-2 col-md-5]

紹介している諸々
・テーブル作成
・フォーム作成
・左右にアクセサリーを追加する場合のやり方について
・ボタン
・ドロップダウンの作り方（これが少し難しい）
  親要素 ( <div> ) に dropdown-menu、子要素 ( <a> ) に dropdown-item クラスを追加してください。
・タブを使ったナビゲーション
　<ul> に nav と nav-tabs クラスを、さらに <li> に nav-item クラス、<a> に nav-link クラスを追加してください。
・ナビゲーションバー
　<nav> 要素に navbar クラスと navbar-expand クラスを追加してください。
  ナビゲーションバーの中に表示する内容の色の方針を決めます。背景色を明るい色にするときは navbar-light クラス、暗い色なら navbar-dark クラスを <nav> 要素に追加すると、いい感じに調整されます。今回は背景色を明るめにしたいので navbar-light クラスを指定します。
  背景色は bg-[色の種類] クラスを追加します。色の種類はボタンと同じ primary や secondary、info などです。今回は bg-light クラスを使います。
  よくあるサイトのように、左端に表示されるサイト名は <a> 要素で囲み、リンクを設定します。その <a> 要素には必ず navbar-brand クラスを追加してください。
  その他の肯定はlesson5参照
・ボタンの中に数字や文字を入れる
  ボタンの表示内容に数値を追加し、新着通知の件数を表示するときに使います。数値を <span> で囲み、badge と badge-pill 、badge-[色の種類] 以上3つのクラスを追加してください。
  <button class="btn btn-primary">
    受信トレイ <span class="badge badge-pill badge-light">7</span>
  </button>
・alert
  アラート表示の際はalert と alert-[色の種類] クラスを追加することで利用できます。
・カードの使用方法
　大枠にcard、タイトルはcard-header、コンテンツはcard-bodyクラスを付与する。
・ユーティリティークラス
  bootstrapではmargin,borderなどの基本情報は簡易的な命令が用意されている。
  margin や padding に関する以下の命令が用意されています。[余白の種類][余白の場所]-[余白の大きさ] という記述の仕方で使うルールです。
  mtー１やpbー４などで技術する。
  flexboxモデルを使用する場合のclassも一応存在する。
・FontAwesomeのアイコンを使用する場合を考える。